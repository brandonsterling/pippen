{"ast":null,"code":"import React, { useRef } from 'react';\nimport { Transition, TransitionGroup } from 'react-transition-group';\nimport { getDefaultZIndex, Portal, Box } from '@mantine/core';\nimport { useForceUpdate, useReducedMotion, useDidUpdate } from '@mantine/hooks';\nimport { NotificationsContext } from '../Notifications.context.js';\nimport { useNotificationsEvents } from '../events.js';\nimport getPositionStyles from './get-position-styles/get-position-styles.js';\nimport getNotificationStateStyles from './get-notification-state-styles/get-notification-state-styles.js';\nimport NotificationContainer from '../NotificationContainer/NotificationContainer.js';\nimport useStyles from './NotificationsProvider.styles.js';\nimport useNotificationsState from './use-notifications-state/use-notifications-state.js';\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\n\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\n\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\n\nvar __objRest = (source, exclude) => {\n  var target = {};\n\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\n\nconst POSITIONS = [\"top-left\", \"top-right\", \"top-center\", \"bottom-left\", \"bottom-right\", \"bottom-center\"];\n\nfunction NotificationsProvider(_a) {\n  var _b = _a,\n      {\n    className,\n    position = \"bottom-right\",\n    autoClose = 4e3,\n    transitionDuration = 250,\n    containerWidth = 440,\n    notificationMaxHeight = 200,\n    limit = 5,\n    zIndex = getDefaultZIndex(\"overlay\"),\n    style,\n    children\n  } = _b,\n      others = __objRest(_b, [\"className\", \"position\", \"autoClose\", \"transitionDuration\", \"containerWidth\", \"notificationMaxHeight\", \"limit\", \"zIndex\", \"style\", \"children\"]);\n\n  const forceUpdate = useForceUpdate();\n  const refs = useRef({});\n  const previousLength = useRef(0);\n  const {\n    notifications,\n    queue,\n    showNotification,\n    updateNotification,\n    hideNotification,\n    clean,\n    cleanQueue\n  } = useNotificationsState({\n    limit\n  });\n  const {\n    classes,\n    cx,\n    theme\n  } = useStyles({\n    zIndex\n  });\n  const shouldReduceMotion = useReducedMotion();\n  const reduceMotion = theme.respectReducedMotion ? shouldReduceMotion : false;\n  const duration = reduceMotion ? 1 : transitionDuration;\n  const positioning = (POSITIONS.includes(position) ? position : \"bottom-right\").split(\"-\");\n  useDidUpdate(() => {\n    if (notifications.length > previousLength.current) {\n      setTimeout(() => forceUpdate(), 0);\n    }\n\n    previousLength.current = notifications.length;\n  }, [notifications]);\n  useNotificationsEvents({\n    show: showNotification,\n    hide: hideNotification,\n    update: updateNotification,\n    clean,\n    cleanQueue\n  });\n  const items = notifications.map(notification => /* @__PURE__ */React.createElement(Transition, {\n    key: notification.id,\n    timeout: duration,\n    onEnter: () => refs.current[notification.id].offsetHeight,\n    nodeRef: {\n      current: refs.current[notification.id]\n    }\n  }, state => /* @__PURE__ */React.createElement(NotificationContainer, {\n    innerRef: node => {\n      refs.current[notification.id] = node;\n    },\n    notification,\n    onHide: hideNotification,\n    className: classes.notification,\n    autoClose,\n    sx: [__spreadValues({}, getNotificationStateStyles({\n      state,\n      positioning,\n      transitionDuration: duration,\n      maxHeight: notificationMaxHeight\n    })), ...(Array.isArray(notification.sx) ? notification.sx : [notification.sx])]\n  })));\n  return /* @__PURE__ */React.createElement(NotificationsContext.Provider, {\n    value: {\n      notifications,\n      queue\n    }\n  }, /* @__PURE__ */React.createElement(Portal, null, /* @__PURE__ */React.createElement(Box, __spreadValues({\n    className: cx(classes.notifications, className),\n    style,\n    sx: __spreadValues({\n      maxWidth: containerWidth\n    }, getPositionStyles(positioning, containerWidth, theme.spacing.md))\n  }, others), /* @__PURE__ */React.createElement(TransitionGroup, null, items))), children);\n}\n\nNotificationsProvider.displayName = \"@mantine/notifications/NotificationsProvider\";\nexport { NotificationsProvider };","map":{"version":3,"mappings":"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","names":["__defProp","Object","defineProperty","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","key","value","enumerable","configurable","writable","__spreadValues","a","b","prop","call","__objRest","source","exclude","target","indexOf","POSITIONS","NotificationsProvider","_a","_b","className","position","autoClose","transitionDuration","containerWidth","notificationMaxHeight","limit","zIndex","getDefaultZIndex","style","children","others","forceUpdate","useForceUpdate","refs","useRef","previousLength","notifications","queue","showNotification","updateNotification","hideNotification","clean","cleanQueue","useNotificationsState","classes","cx","theme","useStyles","shouldReduceMotion","useReducedMotion","reduceMotion","respectReducedMotion","duration","positioning","includes","split","useDidUpdate","length","current","setTimeout","useNotificationsEvents","show","hide","update","items","map","notification","React","createElement","Transition","id","timeout","onEnter","offsetHeight","nodeRef","state","NotificationContainer","innerRef","node","onHide","sx","getNotificationStateStyles","maxHeight","Array","isArray","NotificationsContext","Provider","Portal","Box","maxWidth","getPositionStyles","spacing","md","TransitionGroup","displayName"],"sources":["../../src/NotificationsProvider/NotificationsProvider.tsx"],"sourcesContent":["import React, { useRef } from 'react';\nimport { Transition, TransitionGroup } from 'react-transition-group';\nimport { DefaultProps, Portal, MantineStyleSystemSize, getDefaultZIndex, Box } from '@mantine/core';\nimport { useReducedMotion, useForceUpdate, useDidUpdate } from '@mantine/hooks';\nimport { NotificationsContext } from '../Notifications.context';\nimport { NotificationsProviderPositioning } from '../types';\nimport { useNotificationsEvents } from '../events';\nimport getPositionStyles from './get-position-styles/get-position-styles';\nimport getNotificationStateStyles from './get-notification-state-styles/get-notification-state-styles';\nimport NotificationContainer from '../NotificationContainer/NotificationContainer';\nimport useStyles from './NotificationsProvider.styles';\nimport useNotificationsState from './use-notifications-state/use-notifications-state';\n\nconst POSITIONS = [\n  'top-left',\n  'top-right',\n  'top-center',\n  'bottom-left',\n  'bottom-right',\n  'bottom-center',\n] as const;\n\nexport interface NotificationProviderProps\n  extends Omit<DefaultProps, MantineStyleSystemSize>,\n    React.ComponentPropsWithoutRef<'div'> {\n  /** Notifications position */\n  position?:\n    | 'top-left'\n    | 'top-right'\n    | 'top-center'\n    | 'bottom-left'\n    | 'bottom-right'\n    | 'bottom-center';\n\n  /** Auto close timeout for all notifications, false to disable auto close, can be overwritten for individual notifications by showNotification function */\n  autoClose?: number | false;\n\n  /** Notification transitions duration, 0 to turn transitions off */\n  transitionDuration?: number;\n\n  /** Notification width in px, cannot exceed 100% */\n  containerWidth?: number;\n\n  /** Notification max-height in px, used for transitions */\n  notificationMaxHeight?: number;\n\n  /** Maximum amount of notifications displayed at a time, other new notifications will be added to queue */\n  limit?: number;\n\n  /** Notifications container z-index */\n  zIndex?: React.CSSProperties['zIndex'];\n\n  /** Your application */\n  children?: React.ReactNode;\n}\n\nexport function NotificationsProvider({\n  className,\n  position = 'bottom-right',\n  autoClose = 4000,\n  transitionDuration = 250,\n  containerWidth = 440,\n  notificationMaxHeight = 200,\n  limit = 5,\n  zIndex = getDefaultZIndex('overlay'),\n  style,\n  children,\n  ...others\n}: NotificationProviderProps) {\n  const forceUpdate = useForceUpdate();\n  const refs = useRef<Record<string, HTMLDivElement>>({});\n  const previousLength = useRef<number>(0);\n  const {\n    notifications,\n    queue,\n    showNotification,\n    updateNotification,\n    hideNotification,\n    clean,\n    cleanQueue,\n  } = useNotificationsState({ limit });\n\n  const { classes, cx, theme } = useStyles({ zIndex });\n  const shouldReduceMotion = useReducedMotion();\n  const reduceMotion = theme.respectReducedMotion ? shouldReduceMotion : false;\n  const duration = reduceMotion ? 1 : transitionDuration;\n  const positioning = (POSITIONS.includes(position) ? position : 'bottom-right').split(\n    '-'\n  ) as NotificationsProviderPositioning;\n\n  useDidUpdate(() => {\n    if (notifications.length > previousLength.current) {\n      setTimeout(() => forceUpdate(), 0);\n    }\n    previousLength.current = notifications.length;\n  }, [notifications]);\n\n  useNotificationsEvents({\n    show: showNotification,\n    hide: hideNotification,\n    update: updateNotification,\n    clean,\n    cleanQueue,\n  });\n\n  const items = notifications.map((notification) => (\n    <Transition\n      key={notification.id}\n      timeout={duration}\n      onEnter={() => refs.current[notification.id].offsetHeight}\n      nodeRef={{ current: refs.current[notification.id] }}\n    >\n      {(state) => (\n        <NotificationContainer\n          innerRef={(node) => {\n            refs.current[notification.id] = node;\n          }}\n          notification={notification}\n          onHide={hideNotification}\n          className={classes.notification}\n          autoClose={autoClose}\n          sx={[\n            {\n              ...getNotificationStateStyles({\n                state,\n                positioning,\n                transitionDuration: duration,\n                maxHeight: notificationMaxHeight,\n              }),\n            },\n            ...(Array.isArray(notification.sx) ? notification.sx : [notification.sx]),\n          ]}\n        />\n      )}\n    </Transition>\n  ));\n\n  return (\n    <NotificationsContext.Provider value={{ notifications, queue }}>\n      <Portal>\n        <Box\n          className={cx(classes.notifications, className)}\n          style={style}\n          sx={{\n            maxWidth: containerWidth,\n            ...getPositionStyles(positioning, containerWidth, theme.spacing.md),\n          }}\n          {...others}\n        >\n          <TransitionGroup>{items}</TransitionGroup>\n        </Box>\n      </Portal>\n\n      {children}\n    </NotificationsContext.Provider>\n  );\n}\n\nNotificationsProvider.displayName = '@mantine/notifications/NotificationsProvider';\n"]},"metadata":{},"sourceType":"module"}