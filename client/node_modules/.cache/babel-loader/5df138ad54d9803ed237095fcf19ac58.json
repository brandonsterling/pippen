{"ast":null,"code":"import React, { forwardRef, useState, useRef } from 'react';\nimport { useMergedRef, clamp } from '@mantine/hooks';\nimport { Text } from '@mantine/core';\nimport { padTime } from '../pad-time/pad-time.js';\nimport useStyles from '../TimeInputBase.styles.js';\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\n\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\n\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\n\nvar __objRest = (source, exclude) => {\n  var target = {};\n\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\n\nconst TimeField = forwardRef((_a, ref) => {\n  var _b = _a,\n      {\n    className,\n    onFocus,\n    onBlur,\n    onChange,\n    setValue,\n    withSeparator = false,\n    size = \"sm\",\n    max,\n    min = 0,\n    value,\n    unstyled\n  } = _b,\n      others = __objRest(_b, [\"className\", \"onFocus\", \"onBlur\", \"onChange\", \"setValue\", \"withSeparator\", \"size\", \"max\", \"min\", \"value\", \"unstyled\"]);\n\n  const [digitsEntered, setDigitsEntered] = useState(0);\n  const {\n    classes,\n    cx,\n    theme\n  } = useStyles({\n    size,\n    hasValue: !!value\n  }, {\n    name: \"TimeField\",\n    unstyled\n  });\n  const inputRef = useRef();\n\n  const handleFocus = event => {\n    typeof onFocus === \"function\" && onFocus(event);\n    inputRef.current.select();\n    setDigitsEntered(0);\n  };\n\n  const handleBlur = event => {\n    typeof onBlur === \"function\" && onBlur(event);\n\n    if (digitsEntered === 1) {\n      typeof onChange === \"function\" && onChange(event.currentTarget.value, false);\n    }\n  };\n\n  const handleClick = event => {\n    event.stopPropagation();\n    inputRef.current.select();\n  };\n\n  const handleKeyDown = event => {\n    if (event.key === \"ArrowUp\") {\n      event.preventDefault();\n      const padded = padTime(clamp(parseInt(event.currentTarget.value, 10) + 1, min, max).toString());\n\n      if (value !== padded) {\n        onChange(padded, false);\n      }\n    }\n\n    if (event.key === \"ArrowDown\") {\n      event.preventDefault();\n      const padded = padTime(clamp(parseInt(event.currentTarget.value, 10) - 1, min, max).toString());\n\n      if (value !== padded) {\n        onChange(padded, false);\n      }\n    }\n  };\n\n  const handleChange = event => {\n    setDigitsEntered(digitsEntered + 1);\n\n    const _val = parseInt(event.currentTarget.value, 10).toString();\n\n    if (_val === \"0\" && digitsEntered === 0) {\n      setValue(\"00\");\n      return;\n    }\n\n    onChange(_val, true, digitsEntered > 0);\n  };\n\n  return /* @__PURE__ */React.createElement(React.Fragment, null, /* @__PURE__ */React.createElement(\"input\", __spreadValues({\n    type: \"text\",\n    inputMode: \"numeric\",\n    ref: useMergedRef(inputRef, ref),\n    onChange: handleChange,\n    onClick: handleClick,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    onKeyDown: handleKeyDown,\n    value,\n    className: cx(classes.timeInput, className)\n  }, others)), withSeparator && /* @__PURE__ */React.createElement(Text, {\n    size,\n    unstyled,\n    style: {\n      lineHeight: 1,\n      color: value ? \"inherit\" : theme.colorScheme === \"dark\" ? theme.colors.dark[2] : theme.colors.gray[7]\n    }\n  }, \":\"));\n});\nTimeField.displayName = \"@mantine/dates/TimeField\";\nexport { TimeField };","map":{"version":3,"mappings":"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","names":["__defProp","Object","defineProperty","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","key","value","enumerable","configurable","writable","__spreadValues","a","b","prop","call","__objRest","source","exclude","target","indexOf","TimeField","forwardRef","_a","ref","_b","className","onFocus","onBlur","onChange","setValue","withSeparator","size","max","min","unstyled","others","digitsEntered","setDigitsEntered","useState","classes","cx","theme","useStyles","hasValue","name","inputRef","useRef","handleFocus","event","current","select","handleBlur","currentTarget","handleClick","stopPropagation","handleKeyDown","preventDefault","padded","padTime","clamp","parseInt","toString","handleChange","_val","React","createElement","Fragment","type","inputMode","useMergedRef","onClick","onKeyDown","timeInput","Text","style","lineHeight","color","colorScheme","colors","dark","gray","displayName"],"sources":["../../../../src/components/TimeInputBase/TimeField/TimeField.tsx"],"sourcesContent":["import React, { useRef, forwardRef, useState } from 'react';\nimport { useMergedRef, clamp } from '@mantine/hooks';\nimport { Text, MantineSize } from '@mantine/core';\nimport { padTime } from '../pad-time/pad-time';\nimport useStyles from '../TimeInputBase.styles';\nimport type { createTimeHandler } from '../create-time-handler/create-time-handler';\n\ninterface TimeFieldProps\n  extends Omit<React.ComponentPropsWithoutRef<'input'>, 'onChange' | 'size'> {\n  /** Called with onChange event */\n  onChange: ReturnType<typeof createTimeHandler>;\n\n  /** Called to set input value and bypass parent validation/onChange calls */\n  setValue(value: string): void;\n\n  /** Adds colon after the field */\n  withSeparator?: boolean;\n\n  /** Colon text size */\n  size?: MantineSize;\n\n  /** Maximum possible value */\n  max?: number;\n\n  /** Minimum possible value. Default 0 */\n  min?: number;\n\n  unstyled?: boolean;\n}\n\nexport const TimeField = forwardRef<HTMLInputElement, TimeFieldProps>(\n  (\n    {\n      className,\n      onFocus,\n      onBlur,\n      onChange,\n      setValue,\n      withSeparator = false,\n      size = 'sm',\n      max,\n      min = 0,\n      value,\n      unstyled,\n      ...others\n    }: TimeFieldProps,\n    ref\n  ) => {\n    const [digitsEntered, setDigitsEntered] = useState(0);\n    const { classes, cx, theme } = useStyles(\n      { size, hasValue: !!value },\n      { name: 'TimeField', unstyled }\n    );\n    const inputRef = useRef<HTMLInputElement>();\n\n    const handleFocus = (event: React.FocusEvent<HTMLInputElement>) => {\n      typeof onFocus === 'function' && onFocus(event);\n      inputRef.current.select();\n      setDigitsEntered(0);\n    };\n\n    const handleBlur = (event: any) => {\n      typeof onBlur === 'function' && onBlur(event);\n      // Call onChange in case the only digit entered is 0\n      if (digitsEntered === 1) {\n        typeof onChange === 'function' && onChange(event.currentTarget.value, false);\n      }\n    };\n\n    const handleClick = (event: React.MouseEvent<HTMLInputElement, MouseEvent>) => {\n      event.stopPropagation();\n      inputRef.current.select();\n    };\n\n    const handleKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\n      if (event.key === 'ArrowUp') {\n        event.preventDefault();\n        const padded = padTime(\n          clamp(parseInt(event.currentTarget.value, 10) + 1, min, max).toString()\n        );\n\n        if (value !== padded) {\n          onChange(padded, false);\n        }\n      }\n\n      if (event.key === 'ArrowDown') {\n        event.preventDefault();\n        const padded = padTime(\n          clamp(parseInt(event.currentTarget.value, 10) - 1, min, max).toString()\n        );\n\n        if (value !== padded) {\n          onChange(padded, false);\n        }\n      }\n    };\n\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n      setDigitsEntered(digitsEntered + 1);\n\n      const _val = parseInt(event.currentTarget.value, 10).toString();\n\n      // In 12-hour format, 0 is not allowed, but it could be the start of 01, 02, etc.\n      if (_val === '0' && digitsEntered === 0) {\n        setValue('00');\n        return;\n      }\n      onChange(_val, true, digitsEntered > 0);\n    };\n\n    return (\n      <>\n        <input\n          type=\"text\"\n          inputMode=\"numeric\"\n          ref={useMergedRef(inputRef, ref)}\n          onChange={handleChange}\n          onClick={handleClick}\n          onFocus={handleFocus}\n          onBlur={handleBlur}\n          onKeyDown={handleKeyDown}\n          value={value}\n          className={cx(classes.timeInput, className)}\n          {...others}\n        />\n\n        {withSeparator && (\n          <Text\n            size={size}\n            unstyled={unstyled}\n            style={{\n              lineHeight: 1,\n              color: value\n                ? 'inherit'\n                : theme.colorScheme === 'dark'\n                ? theme.colors.dark[2]\n                : theme.colors.gray[7],\n            }}\n          >\n            :\n          </Text>\n        )}\n      </>\n    );\n  }\n);\n\nTimeField.displayName = '@mantine/dates/TimeField';\n"]},"metadata":{},"sourceType":"module"}