{"ast":null,"code":"import 'dayjs';\nimport { isSameDate } from '../../../utils/is-same-date/is-same-date.js';\nimport { isWeekend } from './is-weekend/is-weekend.js';\nimport { isOutside } from './is-outside/is-outside.js';\nimport { isDisabled } from './is-disabled/is-disabled.js';\nimport { getRangeProps } from './get-range-props/get-range-props.js';\n\nfunction getDayProps(_ref) {\n  let {\n    date,\n    month,\n    hasValue,\n    minDate,\n    maxDate,\n    value,\n    excludeDate,\n    disableOutsideEvents,\n    range,\n    weekendDays\n  } = _ref;\n  const outside = isOutside(date, month);\n  const selected = hasValue && (Array.isArray(value) ? value.some(val => isSameDate(val, date)) : isSameDate(date, value));\n  const {\n    inRange,\n    lastInRange,\n    firstInRange,\n    selectedInRange\n  } = getRangeProps(date, range);\n  return {\n    disabled: isDisabled({\n      minDate,\n      maxDate,\n      excludeDate,\n      disableOutsideEvents,\n      date,\n      outside\n    }),\n    weekend: isWeekend(date, weekendDays),\n    selectedInRange,\n    selected,\n    inRange,\n    firstInRange,\n    lastInRange,\n    outside\n  };\n}\n\nexport { getDayProps };","map":{"version":3,"mappings":";;;;;;;AAKO,SAASA,WAAT,OAWJ;EAAA,IAXyB;IAC1BC,IAD0B;IAE1BC,KAF0B;IAG1BC,QAH0B;IAI1BC,OAJ0B;IAK1BC,OAL0B;IAM1BC,KAN0B;IAO1BC,WAP0B;IAQ1BC,oBAR0B;IAS1BC,KAT0B;IAU1BC;EAV0B,CAWzB;EACD,MAAMC,OAAO,GAAGC,SAAS,CAACX,IAAD,EAAOC,KAAP,CAAzB;EACA,MAAMW,QAAQ,GAAGV,QAAQ,KAAKW,KAAK,CAACC,OAAN,CAAcT,KAAd,IAAuBA,KAAK,CAACU,IAAN,CAAYC,GAAD,IAASC,UAAU,CAACD,GAAD,EAAMhB,IAAN,CAA9B,CAAvB,GAAoEiB,UAAU,CAACjB,IAAD,EAAOK,KAAP,CAAnF,CAAzB;EACA,MAAM;IAAEa,OAAF;IAAWC,WAAX;IAAwBC,YAAxB;IAAsCC;EAAtC,IAA0DC,aAAa,CAACtB,IAAD,EAAOQ,KAAP,CAA7E;EACA,OAAO;IACLe,QAAQ,EAAEC,UAAU,CAAC;MAAErB,OAAF;MAAWC,OAAX;MAAoBE,WAApB;MAAiCC,oBAAjC;MAAuDP,IAAvD;MAA6DU;IAA7D,CAAD,CADf;IAELe,OAAO,EAAEC,SAAS,CAAC1B,IAAD,EAAOS,WAAP,CAFb;IAGLY,eAHK;IAILT,QAJK;IAKLM,OALK;IAMLE,YANK;IAOLD,WAPK;IAQLT;EARK,CAAP;AAUF","names":["getDayProps","date","month","hasValue","minDate","maxDate","value","excludeDate","disableOutsideEvents","range","weekendDays","outside","isOutside","selected","Array","isArray","some","val","isSameDate","inRange","lastInRange","firstInRange","selectedInRange","getRangeProps","disabled","isDisabled","weekend","isWeekend"],"sources":["../../../../src/components/Month/get-day-props/get-day-props.ts"],"sourcesContent":["import { isSameDate } from '../../../utils';\nimport { DayModifiers } from '../types';\nimport { isWeekend } from './is-weekend/is-weekend';\nimport { isOutside } from './is-outside/is-outside';\nimport { isDisabled } from './is-disabled/is-disabled';\nimport { getRangeProps } from './get-range-props/get-range-props';\n\ninterface GetDayProps {\n  /** Date associated with Day component */\n  date: Date;\n\n  /** Month that is currently displayed */\n  month: Date;\n\n  /** Does month have value prop? */\n  hasValue: boolean;\n\n  /** Min and max possible dates */\n  maxDate: Date;\n  minDate: Date;\n\n  /** Currently selected date or an array of dates */\n  value: Date | Date[];\n\n  /** Function to determine if date should be excluded */\n  excludeDate(date: Date): boolean;\n\n  /** Should outside events be disabled */\n  disableOutsideEvents: boolean;\n\n  /** Selected date range */\n  range: [Date, Date];\n\n  /** Indices of weekend days */\n  weekendDays: number[];\n}\n\nexport function getDayProps({\n  date,\n  month,\n  hasValue,\n  minDate,\n  maxDate,\n  value,\n  excludeDate,\n  disableOutsideEvents,\n  range,\n  weekendDays,\n}: GetDayProps): DayModifiers {\n  const outside = isOutside(date, month);\n  const selected =\n    hasValue &&\n    (Array.isArray(value) ? value.some((val) => isSameDate(val, date)) : isSameDate(date, value));\n  const { inRange, lastInRange, firstInRange, selectedInRange } = getRangeProps(date, range);\n\n  return {\n    disabled: isDisabled({ minDate, maxDate, excludeDate, disableOutsideEvents, date, outside }),\n    weekend: isWeekend(date, weekendDays),\n    selectedInRange,\n    selected,\n    inRange,\n    firstInRange,\n    lastInRange,\n    outside,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}