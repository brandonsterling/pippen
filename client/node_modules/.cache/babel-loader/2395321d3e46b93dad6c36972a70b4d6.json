{"ast":null,"code":"var _jsxFileName = \"/Users/brandonsterling/Desktop/Projects/pippen/client/src/components/Editor/ExperienceForm.jsx\";\nimport { Box, Button, createStyles, Group, SimpleGrid, Text, TextInput } from \"@mantine/core\";\nimport { DatePicker } from \"@mantine/dates\";\nimport React from \"react\";\nimport Accordion from \"./Accordion\";\nimport HighlightsForm from \"./HighlightsForm\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = createStyles(theme => ({\n  card: {\n    position: \"relative\",\n    cursor: \"pointer\",\n    overflow: \"hidden\",\n    marginTop: \"15px\",\n    marginBottom: \"20px\",\n    transition: \"transform 150ms ease, box-shadow 100ms ease\",\n    padding: theme.spacing.xl,\n    paddingLeft: theme.spacing.xl * 2,\n    \"&:hover\": {\n      boxShadow: theme.shadows.md,\n      transform: \"scale(1.02)\"\n    },\n    \"&::before\": {\n      content: '\"\"',\n      position: \"absolute\",\n      top: 0,\n      bottom: 0,\n      left: 0,\n      width: 6,\n      backgroundImage: theme.fn.linearGradient(0, \"#408AF8\", \"#6772E5\")\n    }\n  }\n}));\n\nfunction ExperienceForm(_ref) {\n  let {\n    form\n  } = _ref;\n  const fields = form.values.experience.map((item, index) => /*#__PURE__*/_jsxDEV(Accordion, {\n    title: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [form.getInputProps(`experience.${index}.company`).value, \" \", form.getInputProps(`experience.${index}.role`).value]\n    }, void 0, true),\n    remove: () => form.removeListItem(\"experience\", index),\n    content: /*#__PURE__*/_jsxDEV(SimpleGrid, {\n      cols: 2,\n      breakpoints: [{\n        maxWidth: \"sm\",\n        cols: 1\n      }],\n      children: [/*#__PURE__*/_jsxDEV(TextInput, {\n        label: \"Role\",\n        ...form.getInputProps(`experience.${index}.role`)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n        label: \"Company\",\n        ...form.getInputProps(`experience.${index}.company`)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n        label: \"City\",\n        ...form.getInputProps(`experience.${index}.location.city`)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n        label: \"State\",\n        ...form.getInputProps(`experience.${index}.location.state`)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DatePicker, { ...form.getInputProps(`experience.${index}.start_date`),\n        allowLevelChange: \"month\",\n        label: \"Start date\",\n        value: new Date(form.getInputProps(`experience.${index}.start_date`).value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DatePicker, { ...form.getInputProps(`experience.${index}.end_date`),\n        allowLevelChange: \"month\",\n        label: \"End date\",\n        value: new Date(form.getInputProps(`experience.${index}.end_date`).value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this),\n    children: [/*#__PURE__*/_jsxDEV(HighlightsForm, {\n      form: form,\n      index: index,\n      highlights: item.highlights\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => form.insertListItem(`experience.${index}.highlights`, \"\"),\n      sx: {\n        alignItems: \"left\"\n      },\n      fullWidth: true,\n      variant: \"subtle\",\n      children: \"+ Add a highlight\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, index, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(Box, {\n    withBorder: true,\n    radius: \"md\",\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      size: \"xl\",\n      weight: 700,\n      children: \"Experience\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), fields, /*#__PURE__*/_jsxDEV(Group, {\n      position: \"center\",\n      mt: \"md\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        size: \"md\",\n        fullWidth: true,\n        variant: \"subtle\",\n        onClick: () => form.insertListItem(\"experience\", {\n          highlights: [],\n          role: \"\",\n          company: \"\",\n          location: {\n            city: \"\",\n            region: \"\"\n          },\n          start_date: \"\",\n          end_date: \"\",\n          present: null,\n          summary: \"\"\n        }),\n        children: \"+ Add an experience\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n}\n\n_c = ExperienceForm;\nexport default ExperienceForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExperienceForm\");","map":{"version":3,"names":["Box","Button","createStyles","Group","SimpleGrid","Text","TextInput","DatePicker","React","Accordion","HighlightsForm","useStyles","theme","card","position","cursor","overflow","marginTop","marginBottom","transition","padding","spacing","xl","paddingLeft","boxShadow","shadows","md","transform","content","top","bottom","left","width","backgroundImage","fn","linearGradient","ExperienceForm","form","fields","values","experience","map","item","index","getInputProps","value","removeListItem","maxWidth","cols","Date","highlights","insertListItem","alignItems","role","company","location","city","region","start_date","end_date","present","summary"],"sources":["/Users/brandonsterling/Desktop/Projects/pippen/client/src/components/Editor/ExperienceForm.jsx"],"sourcesContent":["import {\n  Box,\n  Button,\n  createStyles,\n  Group,\n  SimpleGrid,\n  Text,\n  TextInput,\n} from \"@mantine/core\";\nimport { DatePicker } from \"@mantine/dates\";\nimport React from \"react\";\nimport Accordion from \"./Accordion\";\nimport HighlightsForm from \"./HighlightsForm\";\n\nconst useStyles = createStyles((theme) => ({\n  card: {\n    position: \"relative\",\n    cursor: \"pointer\",\n    overflow: \"hidden\",\n    marginTop: \"15px\",\n    marginBottom: \"20px\",\n    transition: \"transform 150ms ease, box-shadow 100ms ease\",\n    padding: theme.spacing.xl,\n    paddingLeft: theme.spacing.xl * 2,\n\n    \"&:hover\": {\n      boxShadow: theme.shadows.md,\n      transform: \"scale(1.02)\",\n    },\n\n    \"&::before\": {\n      content: '\"\"',\n      position: \"absolute\",\n      top: 0,\n      bottom: 0,\n      left: 0,\n      width: 6,\n      backgroundImage: theme.fn.linearGradient(0, \"#408AF8\", \"#6772E5\"),\n    },\n  },\n}));\n\nfunction ExperienceForm({ form }) {\n  const fields = form.values.experience.map((item, index) => (\n    <Accordion\n      key={index}\n      title={\n        <>\n          {form.getInputProps(`experience.${index}.company`).value}{\" \"}\n          {form.getInputProps(`experience.${index}.role`).value}\n        </>\n      }\n      remove={() => form.removeListItem(\"experience\", index)}\n      content={\n        <SimpleGrid cols={2} breakpoints={[{ maxWidth: \"sm\", cols: 1 }]}>\n          <TextInput\n            label=\"Role\"\n            {...form.getInputProps(`experience.${index}.role`)}\n          />\n          <TextInput\n            label=\"Company\"\n            {...form.getInputProps(`experience.${index}.company`)}\n          />\n          <TextInput\n            label=\"City\"\n            {...form.getInputProps(`experience.${index}.location.city`)}\n          />\n          <TextInput\n            label=\"State\"\n            {...form.getInputProps(`experience.${index}.location.state`)}\n          />\n          <DatePicker\n            {...form.getInputProps(`experience.${index}.start_date`)}\n            allowLevelChange={\"month\"}\n            label=\"Start date\"\n            value={\n              new Date(\n                form.getInputProps(`experience.${index}.start_date`).value\n              )\n            }\n          />\n          <DatePicker\n            {...form.getInputProps(`experience.${index}.end_date`)}\n            allowLevelChange={\"month\"}\n            label=\"End date\"\n            value={\n              new Date(form.getInputProps(`experience.${index}.end_date`).value)\n            }\n          />\n        </SimpleGrid>\n      }\n    >\n      <HighlightsForm form={form} index={index} highlights={item.highlights} />\n      <Button\n        onClick={() =>\n          form.insertListItem(`experience.${index}.highlights`, \"\")\n        }\n        sx={{ alignItems: \"left\" }}\n        fullWidth\n        variant=\"subtle\"\n      >\n        + Add a highlight\n      </Button>\n    </Accordion>\n  ));\n\n  return (\n    <Box withBorder radius=\"md\">\n      <Text size=\"xl\" weight={700}>\n        Experience\n      </Text>\n      {fields}\n      <Group position=\"center\" mt=\"md\">\n        <Button\n          size=\"md\"\n          fullWidth\n          variant=\"subtle\"\n          onClick={() =>\n            form.insertListItem(\"experience\", {\n              highlights: [],\n              role: \"\",\n              company: \"\",\n              location: {\n                city: \"\",\n                region: \"\",\n              },\n              start_date: \"\",\n              end_date: \"\",\n              present: null,\n              summary: \"\",\n            })\n          }\n        >\n          + Add an experience\n        </Button>\n      </Group>{\" \"}\n    </Box>\n  );\n}\n\nexport default ExperienceForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}